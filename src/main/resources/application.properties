spring.mvc.view.prefix:/WEB-INF/jsp/
spring.mvc.view.suffix:.jsp

#spring.datasource.url=jdbc:mysql://localhost:3306/taskdb?useSSL=false
#spring.datasource.username=root
#spring.datasource.password=MyNewPass
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver																																																		
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
##logging.level.org.hibernate.SQL=debug

#THIS IS THE LOCALHOST DATABASE - IT WORKS!
#spring.datasource.url=jdbc:mysql://localhost:3306/taskdb?useSSL=false
#spring.datasource.username=springuser
#spring.datasource.password=1Qazxsw2
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#logging.level.org.hibernate.SQL=debug
# This allow to update the DB SCHEME for Mysql and AWS RDS to work
#spring.jpa.hibernate.ddl-auto=update

#HEROKU POSTGRE DATA BASE
spring.datasource.url=jdbc:postgresql://ec2-107-20-167-11.compute-1.amazonaws.com:5432/d6m5ihpcbq09pv?ssl=true&sslmode=require
spring.datasource.username=vpshoonowxoulb
spring.datasource.password=de3477ccc4859e508b8288edcf4945309e1ec51abb5ad7817b16f61015598f15
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
#FIRST TIME RUNNING THE DB
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.generate-ddl=true
server.port=${PORT:8080}

#AMAZON 
#spring.datasource.url=jdbc:mysql://firstapp.c6p0dpyhqx6b.us-east-2.rds.amazonaws.com:3306/AlonsoTaskManagerApp?useSSL=false
#spring.datasource.username=root
#spring.datasource.password=1Qazxsw2
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#logging.level.org.hibernate.SQL=debug
#spring.jpa.properties.hibernate.id.new_generator_mappings=false

#server.port=${PORT:5432}